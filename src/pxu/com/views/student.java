/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package pxu.com.views;

import java.awt.Desktop;
import java.sql.Connection;

import java.awt.Image;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import pxu.com.connect.Image_nckh;
import pxu.com.connect.connecting;
import pxu.com.connect.messconec;
import pxu.com.dao.StudentDao;
import pxu.com.model.StudentModel;
import pxu.com.model.UserModel;
import pxu.com.model.RoomModel;
import pxu.com.model.tableStuentModel;

/**
 *
 * @author NGUYEN DUNG
 */
public class student extends javax.swing.JDialog {

    Connection cn;
    long count, soTrang, trang = 1;
    Statement st;
    ResultSet rs;

    /**
     * Creates new form Student
     */
    public student(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.setSize(935, 685);
        this.setLocationRelativeTo(null);
        initComponents();
        HIENTHI();
        titleTable();
        getNhanViens();
//        countDb();
        if (count % 5 == 0) {
            soTrang = count / 5;
        } else {
            soTrang = count / 5 + 1;
        }
        loadData(1);
        lblsotrang1.setText("1/" + soTrang);
        lbltrang1.setText("1");

//        ImageIcon icons = new ImageIcon(getClass().getResource("/pxu/com/images/avatar5.png"));
//        lblanh.setIcon(icons);
        lblanh.setSize(150, 150);
        txtMaSV.setEnabled(false);
        anbandau();
    }
    DefaultTableModel tblModel;
    ArrayList<UserModel> lstuser;
    tableStuentModel tbm;
    private byte[] porsonimage;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btnMoi = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXuatExcel = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenSV = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cbTrangThai = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JFormattedTextField();
        cbDiaChi = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtCCCD = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        birthdate = new com.toedter.calendar.JDateChooser();
        checkoutdate = new com.toedter.calendar.JDateChooser();
        cbKhoa = new javax.swing.JComboBox<>();
        cbNganh = new javax.swing.JComboBox<>();
        cbGT = new javax.swing.JComboBox<>();
        cbPhong = new javax.swing.JComboBox<>();
        spSLVP = new javax.swing.JSpinner();
        btnanh = new javax.swing.JButton();
        lblanh = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtTK = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblsinhvien = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        btnnhomax1 = new javax.swing.JButton();
        btnnho1 = new javax.swing.JButton();
        lbltrang1 = new javax.swing.JLabel();
        btnlon1 = new javax.swing.JButton();
        btnlonmax1 = new javax.swing.JButton();
        lblsotrang1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("QUẢN LÝ SINH VIÊN");
        jLabel1.setFocusable(false);
        jPanel1.add(jLabel1);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, -1));

        jPanel3.setBackground(new java.awt.Color(255, 255, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông Tin Sinh Viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 13))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(255, 255, 153));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 20);
        flowLayout1.setAlignOnBaseline(true);
        jPanel5.setLayout(flowLayout1);

        btnMoi.setBackground(new java.awt.Color(255, 204, 204));
        btnMoi.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnMoi.setText("Làm Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });
        jPanel5.add(btnMoi);

        btnThem.setBackground(new java.awt.Color(255, 204, 204));
        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel5.add(btnThem);

        btnXoa.setBackground(new java.awt.Color(255, 204, 204));
        btnXoa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel5.add(btnXoa);

        btnSua.setBackground(new java.awt.Color(255, 204, 204));
        btnSua.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel5.add(btnSua);

        btnXuatExcel.setBackground(new java.awt.Color(255, 204, 204));
        btnXuatExcel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXuatExcel.setText("Xuất Excel");
        btnXuatExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatExcelActionPerformed(evt);
            }
        });
        jPanel5.add(btnXuatExcel);

        jPanel3.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 1010, 60));

        jPanel7.setBackground(new java.awt.Color(255, 255, 153));
        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel7.setMinimumSize(new java.awt.Dimension(980, 222));
        jPanel7.setName(""); // NOI18N
        jPanel7.setPreferredSize(new java.awt.Dimension(980, 222));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Giới Tính  :");
        jPanel7.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 80, -1));

        txtMaSV.setColumns(40);
        txtMaSV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaSVKeyReleased(evt);
            }
        });
        jPanel7.add(txtMaSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 180, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Quê Quán :");
        jPanel7.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, 80, -1));

        txtTenSV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTenSVKeyReleased(evt);
            }
        });
        jPanel7.add(txtTenSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 180, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Ngày Vào  :");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPanel7.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 120, -1));

        cbTrangThai.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ĐÃ TRẢ", "CHƯA TRẢ" }));
        cbTrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTrangThaiActionPerformed(evt);
            }
        });
        jPanel7.add(cbTrangThai, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 170, 180, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Số Lần Vi Phạm :");
        jPanel7.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 140, 110, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Phòng ở số  :");
        jPanel7.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, -1, -1));

        try {
            txtSDT.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-###-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSDTActionPerformed(evt);
            }
        });
        txtSDT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSDTKeyReleased(evt);
            }
        });
        jPanel7.add(txtSDT, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 180, -1));

        cbDiaChi.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbDiaChi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "An Giang", "Bà Rịa – Vũng Tàu", "Bắc Giang", "Bắc Kạn", "Bạc Liêu", "Bắc Ninh", "Bến Tre", "Bình Định", "Bình Dương", "Bình Phước", "Bình Thuận", "Cà Mau", "Cần Thơ", "Cao Bằng", "Đà Nẵng", "Đắk Lắk", "Đắk Nông", "Điện Biên", "Đồng Nai", "Đồng Tháp", "Gia Lai", "Hà Giang", "Hà Nam", "Hà Nội", "Hà Tĩnh", "Hải Dương", "Hải Phòng", "Hậu Giang", "Hòa Bình", "Hưng Yên", "Khánh Hòa", "Kiên Giang", "Kon Tum", "Lai Châu", "Lâm Đồng", "Lạng Sơn", "Lào Cai", "Long An", "Nam Định", "Nghệ An", "Ninh Bình", "Ninh Thuận", "Phú Thọ", "Phú Yên", "Quảng Bình", "Quảng Nam", "Quảng Ngãi", "Quảng Ninh", "Quảng Trị", "Sóc Trăng", "Sơn La", "Tây Ninh", "Thái Bình", "Thái Nguyên", "Thanh Hóa", "Thừa Thiên Huế", "Tiền Giang", "Thành phố Hồ Chí Minh", "Trà Vinh", "Tuyên Quang", "Vĩnh Long", "Vĩnh Phúc", "Yên Bái" }));
        cbDiaChi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDiaChiActionPerformed(evt);
            }
        });
        jPanel7.add(cbDiaChi, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, 180, -1));
        cbDiaChi.getAccessibleContext().setAccessibleName("");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Trạng Thái :");
        jPanel7.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(405, 170, -1, -1));

        txtCCCD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCCCDKeyReleased(evt);
            }
        });
        jPanel7.add(txtCCCD, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 180, -1));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Mã Sinh Viên :");
        jPanel7.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Tên Sinh Viên :");
        jPanel7.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 50, 90, -1));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Khoa :");
        jLabel12.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel12.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPanel7.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 70, -1));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Ngành :");
        jPanel7.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, -1));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Ngày Sinh :");
        jPanel7.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel15.setText("Số CCCD :");
        jPanel7.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel16.setText("Số Điện Thoại :");
        jPanel7.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));
        jPanel7.add(birthdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 180, -1));
        jPanel7.add(checkoutdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 80, 180, -1));

        cbKhoa.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbKhoa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ngôn Ngữ", "Công Nghệ - Kinh Doanh", "Du Lịch" }));
        cbKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbKhoaActionPerformed(evt);
            }
        });
        jPanel7.add(cbKhoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 180, -1));

        cbNganh.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbNganh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CNTT", "CNKTOTO", "NNA", "NNT", "Du lich - Lữ Hành", "Kế Toán", "TKNT", "TTDPT", " " }));
        cbNganh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNganhActionPerformed(evt);
            }
        });
        jPanel7.add(cbNganh, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 180, -1));

        cbGT.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbGT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ", " " }));
        cbGT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGTActionPerformed(evt);
            }
        });
        jPanel7.add(cbGT, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, 180, -1));

        cbPhong.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbPhong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "101", "102", "103", "104", "201", "202", "203", "204", "301", "302", "303", "304", "401", "402", "403", "404", "501", "502", "503", "504" }));
        cbPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPhongActionPerformed(evt);
            }
        });
        jPanel7.add(cbPhong, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 110, 180, -1));
        jPanel7.add(spSLVP, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, 180, -1));

        btnanh.setText("Chọn ảnh");
        btnanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnanhActionPerformed(evt);
            }
        });
        jPanel7.add(btnanh, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 190, -1, -1));

        lblanh.setText("jLabel17");
        jPanel7.add(lblanh, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 20, 160, 150));

        jPanel3.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 1010, 260));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 1030, 350));

        jPanel4.setBackground(new java.awt.Color(255, 255, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh Sách Sinh Viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 13))); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(668, 127));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel9.setBackground(new java.awt.Color(255, 255, 153));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jLabel6.setText("Nhập Tên Sinh Viên :");
        jPanel9.add(jLabel6);

        txtTK.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtTK.setPreferredSize(new java.awt.Dimension(170, 29));
        txtTK.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTKKeyReleased(evt);
            }
        });
        jPanel9.add(txtTK);

        jPanel4.add(jPanel9, java.awt.BorderLayout.PAGE_START);

        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblsinhvien.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblsinhvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8"
            }
        ));
        tblsinhvien.setMinimumSize(new java.awt.Dimension(120, 50));
        tblsinhvien.setRowHeight(21);
        tblsinhvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblsinhvienMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblsinhvien);

        jPanel10.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 150));

        jPanel4.add(jPanel10, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 1030, 210));

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        btnnhomax1.setBackground(new java.awt.Color(255, 204, 204));
        btnnhomax1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnnhomax1.setText("<<");
        btnnhomax1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnhomax1ActionPerformed(evt);
            }
        });
        jPanel13.add(btnnhomax1);

        btnnho1.setBackground(new java.awt.Color(255, 204, 204));
        btnnho1.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        btnnho1.setText("<");
        btnnho1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnho1ActionPerformed(evt);
            }
        });
        jPanel13.add(btnnho1);

        lbltrang1.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lbltrang1.setText("jLabel6");
        jPanel13.add(lbltrang1);

        btnlon1.setBackground(new java.awt.Color(255, 204, 204));
        btnlon1.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        btnlon1.setText(">");
        btnlon1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlon1ActionPerformed(evt);
            }
        });
        jPanel13.add(btnlon1);

        btnlonmax1.setBackground(new java.awt.Color(255, 204, 204));
        btnlonmax1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnlonmax1.setText(">>");
        btnlonmax1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlonmax1ActionPerformed(evt);
            }
        });
        jPanel13.add(btnlonmax1);

        lblsotrang1.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblsotrang1.setText("jLabel7");
        jPanel13.add(lblsotrang1);

        getContentPane().add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 596, 1030, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaSVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaSVKeyReleased
        validater();
    }//GEN-LAST:event_txtMaSVKeyReleased
    private void anbandau() {
        btnThem.setEnabled(false);
        btnSua.setEnabled(false);
        btnXoa.setEnabled(false);

    }

    private void getNhanViens() {
        String db_url = "jdbc:mysql://127.0.0.1/ql_ktxx";
        String user = "root";
        String pass = "Hung0976661824";
        String query = "SELECT * FROM room";
        ArrayList<RoomModel> room = new ArrayList<>();
        try {
            Connection conn = DriverManager.getConnection(db_url, user, pass);
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                String room_id = rs.getString("room_id");
                room.add(new RoomModel(room_id));
            }
            rs.close();
            conn.close();
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        // Dua du lieu vao DefaultComboBoxModel
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        for (RoomModel nv : room) {
            model.addElement(nv.getRoom_id());
        }
        // Thiet lap model cho JComboBox
        cbPhong.setModel(model);
    }

    private void validater() {
        String tensv = txtTenSV.getText();
        String sdt = txtSDT.getText();
        String ttk = txtCCCD.getText();

        if (!tensv.equals("") && !sdt.equals("") && !ttk.equals("")) {
            btnThem.setEnabled(true);
            btnXoa.setEnabled(true);
            btnSua.setEnabled(true);

        } else {
            anbandau();
        }
    }
    private void txtTenSVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenSVKeyReleased
        validater();
    }//GEN-LAST:event_txtTenSVKeyReleased

    private void cbTrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTrangThaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTrangThaiActionPerformed

    private void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSDTActionPerformed

    }//GEN-LAST:event_txtSDTActionPerformed

    private void txtSDTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKeyReleased
        validater();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSDTKeyReleased

    private void cbDiaChiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDiaChiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDiaChiActionPerformed

    private void txtCCCDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCCCDKeyReleased
        validater();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCCCDKeyReleased
    public void HIENTHI() {
        try {
            Connection conn = connecting.getConnection();
            Statement s = conn.createStatement();
            ResultSet rs = s.executeQuery("SELECT MAX(student_id) FROM student");
            rs.next();
            rs.getString("MAX(student_id)");
            if (rs.getString("MAX(student_id)") == null) {
                txtMaSV.setText("C1001001");
            } else {
                long id = Long.parseLong(rs.getString("MAX(student_id)").substring(3, rs.getString("MAX(student_id)").length()));
                id++;
                txtMaSV.setText("C100" + String.format("%03d", id));
                txtMaSV.setEditable(false);

            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void clear() {
        HIENTHI();
        txtTenSV.setText("");
        txtSDT.setText("");
        txtCCCD.setText("");
        cbDiaChi.setSelectedIndex(0);
        cbTrangThai.setSelectedIndex(0);
        cbGT.setSelectedIndex(0);
        cbKhoa.setSelectedIndex(0);
        cbNganh.setSelectedIndex(0);
        cbPhong.setSelectedIndex(0);
        spSLVP.setValue(0);
        Calendar calendar = Calendar.getInstance();
        java.util.Date currentDate = calendar.getTime();

// Đặt ngày hiện tại cho JDateChooser
        birthdate.setDate(currentDate);
        checkoutdate.setDate(currentDate);

        porsonimage = null;
        ImageIcon icons = new ImageIcon(getClass().getResource("/pxu/com/images/avatar5.png"));
        lblanh.setIcon(icons);
    }
    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        clear();
        anbandau();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            StringBuilder sb = new StringBuilder();

            if (txtMaSV.getText().isEmpty()) {
                sb.append("Mã sinh viên không được để trống.\n");
            }
            if (txtCCCD.getText().isEmpty()) {
                sb.append("CCCD không được để trống.\n");
            }
            if (txtTenSV.getText().isEmpty()) {
                sb.append("Tên sinh viên không được để trống.\n");
            }
            if (txtSDT.getText().isEmpty()) {
                sb.append("Số điện thoại không được để trống.\n");
            }

            if (sb.length() > 0) {
                JOptionPane.showMessageDialog(this, sb.toString(), "Lỗi nhập liệu", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Lấy thông tin từ các trường và đặt vào đối tượng StudentModel
            StudentModel sv = new StudentModel();
            sv.setStudent_id(txtMaSV.getText());
            sv.setGmail(txtCCCD.getText());
            sv.setStudent_name(txtTenSV.getText());
            sv.setPhone_number(txtSDT.getText().replace("-", ""));
            sv.setBirth_date(birthdate.getDate());
            sv.setCheck_in_date(checkoutdate.getDate());
            sv.setHometown(cbDiaChi.getSelectedItem().toString());
            sv.setGender(cbGT.getSelectedItem().toString());
            sv.setFaculty(cbKhoa.getSelectedItem().toString());
            sv.setMajor(cbNganh.getSelectedItem().toString());
            sv.setRoom_id(cbPhong.getSelectedItem().toString());
            sv.setStatus(cbTrangThai.getSelectedItem().toString());
            sv.setStudent_image(porsonimage);
            sv.setViolation_count((int) spSLVP.getValue());
            // Thực hiện thêm thông tin vào CSDL
            StudentDao dk = new StudentDao();
            try {
                dk.insert(sv);
                JOptionPane.showMessageDialog(rootPane, "Thêm sinh viên thành công");

                // Cập nhật dữ liệu từ CSDL vào JTable
                loadData(trang);

                // Xóa dữ liệu đã nhập
                HIENTHI();
                txtCCCD.setText("");
                txtTenSV.setText("");
                txtSDT.setText("");
                birthdate.setDate(null);
                checkoutdate.setDate(null);
                spSLVP.setValue(0);
                // ... Các phần còn lại của việc xóa dữ liệu đã nhập
                clear();
                anbandau();
            } catch (Exception ex) {
                Logger.getLogger(student.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Sinh viên đã tồn tại hoặc có lỗi xảy ra.");
            }

        } catch (Exception ex) {
            Logger.getLogger(student.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        StringBuilder sb = new StringBuilder();
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb);
            return;
        }
        if (JOptionPane.showConfirmDialog(this, "BẠN CHẮC CHẮN XÓA") == JOptionPane.NO_OPTION) {
            return;
        }
        try {
            StudentModel bk = new StudentModel();
            bk.setStudent_id(txtMaSV.getText());
            bk.setStudent_name(txtTenSV.getText());
            bk.setPhone_number(txtSDT.getText());
            bk.setHometown(cbDiaChi.getSelectedItem().toString());
            bk.setStatus(cbTrangThai.getSelectedItem().toString());
            bk.setGmail(txtCCCD.getText());
            bk.setGender(cbGT.getSelectedItem().toString());
            bk.setFaculty(cbKhoa.getSelectedItem().toString());
            bk.setMajor(cbNganh.getSelectedItem().toString());
            bk.setRoom_id(cbPhong.getSelectedItem().toString());
            bk.setBirth_date(birthdate.getDate());
            bk.setCheck_in_date(checkoutdate.getDate());
            bk.setStudent_image(porsonimage);
            StudentDao dk = new StudentDao();
            try {
                dk.delete(bk);
                JOptionPane.showMessageDialog(rootPane, "Thêm sinh viên thành công");

                // Cập nhật dữ liệu từ CSDL vào JTable
                loadData(trang);
                clear();
                anbandau();

                // Xóa dữ liệu đã nhập
            } catch (Exception ex) {
                Logger.getLogger(student.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Sinh viên đã tồn tại hoặc có lỗi xảy ra.");
            }

        } catch (Exception ex) {
            Logger.getLogger(student.class.getName()).log(Level.SEVERE, null, ex);
        }

        // TODO add your handling code here:

        // TODO add your handling code here:
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        StringBuilder sb = new StringBuilder();

        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb);
            return;
        }
        if (JOptionPane.showConfirmDialog(this, "BẠN CHẮC CHẮN Sửa") == JOptionPane.NO_OPTION) {
            return;
        }
        try {
            StudentModel bk = new StudentModel();
            bk.setStudent_id(txtMaSV.getText());
            bk.setStudent_name(txtTenSV.getText());
            bk.setPhone_number(txtSDT.getText().replace("-", ""));
            bk.setHometown(cbDiaChi.getSelectedItem().toString());
            bk.setStatus(cbTrangThai.getSelectedItem().toString());
            bk.setGmail(txtCCCD.getText());
            bk.setGender(cbGT.getSelectedItem().toString());
            bk.setFaculty(cbKhoa.getSelectedItem().toString());
            bk.setMajor(cbNganh.getSelectedItem().toString());
            bk.setRoom_id(cbPhong.getSelectedItem().toString());
            bk.setBirth_date(birthdate.getDate());
            bk.setCheck_in_date(checkoutdate.getDate());
            bk.setStudent_image(porsonimage);
            bk.setViolation_count((int) spSLVP.getValue());

            try {
                StudentDao.updateStudent(bk);
                JOptionPane.showMessageDialog(rootPane, "Thêm sinh viên thành công");

                // Cập nhật dữ liệu từ CSDL vào JTable
                loadData(trang);
                clear();
                anbandau();
            } catch (Exception ex) {
                Logger.getLogger(student.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Sinh viên đã tồn tại hoặc có lỗi xảy ra.");
            }

        } catch (Exception ex) {
            Logger.getLogger(student.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXuatExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatExcelActionPerformed
        try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();

            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("customer");

                // Tạo hàng tiêu đề cho bảng
                Row rowCol = sheet.createRow(0);
                for (int i = 0; i < tblsinhvien.getColumnCount(); i++) {
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(tblsinhvien.getColumnName(i));
                }

                // Lấy tất cả dữ liệu từ bảng
                for (int j = 0; j < tblsinhvien.getRowCount(); j++) {
                    TableRowSorter<TableModel> sorter = new TableRowSorter<>(tblsinhvien.getModel());
                    tblsinhvien.setRowSorter(sorter);
                    int modelRow = tblsinhvien.convertRowIndexToModel(j);
                    Row row = sheet.createRow(j + 1);
                    for (int k = 0; k < tblsinhvien.getColumnCount(); k++) {
                        Object cellValue = tblsinhvien.getModel().getValueAt(modelRow, k);
                        Cell cell = row.createCell(k);
                        if (cellValue != null) {
                            cell.setCellValue(cellValue.toString());
                        }
                    }
                }

                FileOutputStream out = new FileOutputStream(saveFile);
                wb.write(out);
                out.close();
                openFile(saveFile.toString());
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException io) {
            io.printStackTrace();
        }

    }//GEN-LAST:event_btnXuatExcelActionPerformed
    public void openFile(String file) {
        try {
            File path = new File(file);
            Desktop.getDesktop().open(path);
        } catch (IOException ioe) {
            System.out.println(ioe);
        }
    }
    private void txtTKKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTKKeyReleased
        String timkiem = txtTK.getText();
        timmkiem(timkiem);
    }//GEN-LAST:event_txtTKKeyReleased
    public void timmkiem(String st) {
        tblModel = (DefaultTableModel) tblsinhvien.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(tblModel);
        tblsinhvien.setRowSorter(trs);
        RowFilter<DefaultTableModel, Object> filter = new RowFilter<DefaultTableModel, Object>() {
            public boolean include(RowFilter.Entry<? extends DefaultTableModel, ? extends Object> entry) {
                String searchString = st.toLowerCase(); // Chuyển tất cả sang chữ thường
                for (int i = entry.getValueCount() - 1; i >= 0; i--) {
                    if (entry.getStringValue(i).toLowerCase().contains(searchString)) {
                        return true;
                    }
                }
                return false;
            }
        };

        trs.setRowFilter(filter);
    }
    private void tblsinhvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblsinhvienMouseClicked
        try {
            int row = tblsinhvien.getSelectedRow();
            if (row >= 0) {
                String tensinhvien = String.valueOf(tblsinhvien.getValueAt(row, 0));
                StudentDao dk = new StudentDao();
                StudentModel b = dk.FindMaSv(tensinhvien);
                txtMaSV.setText(b.getStudent_id());
                txtTenSV.setText(b.getStudent_name());
                cbKhoa.setSelectedItem(b.getFaculty());
                cbNganh.setSelectedItem(b.getMajor());
                birthdate.setDate(b.getBirth_date());
                txtCCCD.setText(b.getGmail());
                txtSDT.setText(b.getPhone_number());
                cbGT.setSelectedItem(b.getGender());
                cbDiaChi.setSelectedItem(b.getHometown());
                checkoutdate.setDate(b.getCheck_in_date());
                cbPhong.setSelectedItem(b.getRoom_id());
                spSLVP.setValue(b.getViolation_count());
                cbTrangThai.setSelectedItem(b.getStatus());
                porsonimage = b.getStudent_image();
                btnXoa.setEnabled(true);
                if (b != null) {
                    btnXoa.setEnabled(true);
                    txtMaSV.setText(b.getStudent_id());
                    txtTenSV.setText(b.getStudent_name());
                    cbKhoa.setSelectedItem(b.getFaculty());
                    cbNganh.setSelectedItem(b.getMajor());
                    birthdate.setDate(b.getBirth_date());
                    txtCCCD.setText(b.getGmail());
                    txtSDT.setText(b.getPhone_number());
                    cbGT.setSelectedItem(b.getGender());
                    cbDiaChi.setSelectedItem(b.getHometown());
                    checkoutdate.setDate(b.getCheck_in_date());
                    cbPhong.setSelectedItem(b.getRoom_id());
                    spSLVP.setValue(b.getViolation_count());
                    cbTrangThai.setSelectedItem(b.getStatus());
                    if (b.getStudent_image() != null) {
                        Image img = Image_nckh.createImageFromByteArray(b.getStudent_image(), "jpg");
                        lblanh.setIcon(new ImageIcon(img));
                        porsonimage = b.getStudent_image();
                    } else {
                        txtMaSV.setText(b.getStudent_id());
                        txtTenSV.setText(b.getStudent_name());
                        cbKhoa.setSelectedItem(b.getFaculty());
                        cbNganh.setSelectedItem(b.getMajor());
                        birthdate.setDate(b.getBirth_date());
                        txtCCCD.setText(b.getGmail());
                        txtSDT.setText(b.getPhone_number());
                        cbGT.setSelectedItem(b.getGender());
                        cbDiaChi.setSelectedItem(b.getHometown());
                        checkoutdate.setDate(b.getCheck_in_date());
                        cbPhong.setSelectedItem(b.getRoom_id());
                        spSLVP.setValue(b.getViolation_count());
                        cbTrangThai.setSelectedItem(b.getStatus());
                        porsonimage = b.getStudent_image();
                                                ImageIcon icons = new ImageIcon(getClass().getResource("/pxu/com/images/avatar5.png"));
                                                lblanh.setIcon(icons);
                                                btnXoa.setEnabled(true);

                    }
                }

            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_tblsinhvienMouseClicked

    private void btnnhomax1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnhomax1ActionPerformed
        trang = 1;
        loadData(trang);
        lbltrang1.setText("1");
        lblsotrang1.setText("1/" + soTrang);

        // TODO add your handling code here:
    }//GEN-LAST:event_btnnhomax1ActionPerformed

    private void btnnho1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnho1ActionPerformed
        if (trang > 1) {
            trang--;
            loadData(trang);
            lbltrang1.setText("" + trang);
            lblsotrang1.setText(trang + "/" + soTrang);

        }     // TODO add your handling code here:
    }//GEN-LAST:event_btnnho1ActionPerformed

    private void btnlon1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlon1ActionPerformed
        if (trang < soTrang) {
            trang++;
            loadData(trang);
            lbltrang1.setText("" + trang);
            lblsotrang1.setText(trang + "/" + soTrang);
        }    // TODO add your handling code here:
    }//GEN-LAST:event_btnlon1ActionPerformed

    private void btnlonmax1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlonmax1ActionPerformed
        trang = soTrang;
        loadData(trang);
        lbltrang1.setText("" + soTrang);
        lblsotrang1.setText(soTrang + "/" + soTrang);      // TODO add your handling code here:
    }//GEN-LAST:event_btnlonmax1ActionPerformed

    private void cbKhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbKhoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbKhoaActionPerformed

    private void cbNganhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNganhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNganhActionPerformed

    private void cbGTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbGTActionPerformed

    private void cbPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPhongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPhongActionPerformed

    private void btnanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnanhActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(new FileFilter() {
            @Override
            public boolean accept(File f) {
                if (f.isDirectory()) {
                    return true;
                } else {
                    return f.getName().toLowerCase().endsWith(".jpg");
                }
            }

            @Override
            public String getDescription() {
                return "Image Fide(*.jpg)";
            }

        });
        if (chooser.showOpenDialog(jLabel1) == JFileChooser.CANCEL_OPTION) {
            return;
        }
        File file = chooser.getSelectedFile();
        String fileName = file.getName();
        try {
            ImageIcon icon = new ImageIcon(file.getPath());
            Image img = Image_nckh.resize(icon.getImage(), 150, 150);
            ImageIcon resizeIcon = new ImageIcon(img);
            lblanh.setIcon(resizeIcon);
            porsonimage = Image_nckh.toByteArray(img, "jpg");
//                jLabel7.setText(fileName);
        } catch (Exception e) {
            e.printStackTrace();
            messconec.showMessageDialog(jPanel1, e.getMessage(), "lỗi");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnanhActionPerformed
    public void titleTable() {
        tbm = new tableStuentModel();
        tblsinhvien.setModel(tbm);
        tblsinhvien.setShowHorizontalLines(true);
        tblsinhvien.setShowVerticalLines(true);
    }

    public void loadData(long trang) {
        titleTable();
        tbm.getDataVector().removeAllElements();
        try {
            String query = "SELECT * FROM student LIMIT " + (trang - 1) * 5 + ", 5";
            //Trong đó, biến trang chứa số trang cần lấy. Câu lệnh trên sẽ lấy ra 5 dòng dữ liệu bắt đầu từ dòng 5*(trang-1) + 1 đến dòng 5*trang.
            try {
                cn = connecting.getConnection();
            } catch (Exception ex) {
                Logger.getLogger(student.class.getName()).log(Level.SEVERE, null, ex);
            }
            st = cn.createStatement();
            rs = st.executeQuery(query);

            while (rs.next()) {
                Vector v = new Vector();
                String idsv = rs.getString(1);
                String tensv = rs.getString(2);
                String khoa = rs.getString(3);
                String nganh = rs.getString(4);
                String datebrith = rs.getString(5);
                String socccd = rs.getString(6);
                String sdt = rs.getString(7);
                String gt = rs.getString(8);
                String diachi = rs.getString(9);
                String phong = rs.getString(10);
                String vipham = rs.getString(11);
                String ngayvao = rs.getString(12);
                String trangthai = rs.getString(13);

                v.add(idsv);
                v.add(tensv);
                v.add(khoa);
                v.add(nganh);
                v.add(datebrith);
                v.add(socccd);
                v.add(sdt);
                v.add(gt);
                v.add(diachi);
                v.add(phong);
                v.add(vipham);
                v.add(ngayvao);
                v.add(trangthai);
                tbm.addRow(v);
            }
            rs.close();
            st.close();
            cn.close();
        } catch (SQLException ex) {
            Logger.getLogger(student.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                student dialog = new student(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser birthdate;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXuatExcel;
    private javax.swing.JButton btnanh;
    private javax.swing.JButton btnlon1;
    private javax.swing.JButton btnlonmax1;
    private javax.swing.JButton btnnho1;
    private javax.swing.JButton btnnhomax1;
    private javax.swing.JComboBox<String> cbDiaChi;
    private javax.swing.JComboBox<String> cbGT;
    private javax.swing.JComboBox<String> cbKhoa;
    private javax.swing.JComboBox<String> cbNganh;
    private javax.swing.JComboBox<String> cbPhong;
    private javax.swing.JComboBox<String> cbTrangThai;
    private com.toedter.calendar.JDateChooser checkoutdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblanh;
    private javax.swing.JLabel lblsotrang1;
    private javax.swing.JLabel lbltrang1;
    private javax.swing.JSpinner spSLVP;
    private javax.swing.JTable tblsinhvien;
    private javax.swing.JTextField txtCCCD;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JFormattedTextField txtSDT;
    private javax.swing.JTextField txtTK;
    private javax.swing.JTextField txtTenSV;
    // End of variables declaration//GEN-END:variables
}
